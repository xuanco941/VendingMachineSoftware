@{
    Layout = "_LayoutAdmin";
}
<div id="appAccount">
    <div class="row align-items-end">
        <div class="col-md-3 mb-3">
            <label>Tên tài khoản:</label>
            <input type="text" class="form-control" v-model="accountName" placeholder="Nhập tên tài khoản...">
        </div>
        <div class="col-md-3 mb-3">
            <label>Trạng thái:</label>
            <select class="form-control" v-model="isActive">
                <option value="0">Tất cả</option>
                <option value="1">Đã kích hoạt</option>
                <option value="2">Chưa kích hoạt</option>
            </select>
        </div>
        <div class="col-md-2 mb-3">
            <button class="btn btn-success" style="width: 120px;" v-on:click="GetAccounts()">Tìm kiếm</button>
        </div>
    </div>

    <div style="overflow-x:  auto">
        <table class="table table-bordered" style="vertical-align: middle; text-align:center;">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Tên đầy đủ</th>
                    <th scope="col">Email</th>
                    <th scope="col">Mật khẩu</th>
                    <th scope="col">Địa chỉ</th>
                    <th scope="col">Số điện thoại</th>
                    <th scope="col">Số lượt quay may mắn</th>
                    <th scope="col">Trạng thái</th>
                    <th scope="col">Thao tác</th>

                </tr>
            </thead>
            <tbody style="vertical-align:middle;" class="text-dark">
                <tr v-if="isLoad">
                    <td style="font-size: 35px; text-align:center;" colspan="9"><i class="fa-solid fa-spinner fa-spin-pulse"></i></td>
                </tr>
                <tr v-if="isLoad == false" v-for="(item,index) in dataTable">
                    <td>{{index+1}}</td>
                    <td>{{item.fullName}}</td>
                    <td>{{item.email}}</td>
                    <td>{{'*'.repeat(item.password.length)}}</td>
                    <td>{{item.address}}</td>
                    <td>{{item.phoneNumber}}</td>
                    <td>{{item.numberPlayGame}}</td>
                    <td>
                        <span class="badge badge-success" v-if="item.isActive==true">Đã kích hoạt</span>
                        <span class="badge badge-warning" v-if="item.isActive==false">Chưa kích hoạt</span>
                    </td>
                    <td>
                        <button class="btn btn-primary mx-2 my-1" data-toggle="modal" data-target="#modalUpdate" v-on:click="PopupUpdate(item)">Cập nhật</button>
                        <button class="btn btn-danger mx-2 my-1" data-toggle="modal" data-target="#modalDelete" v-on:click="PopupDelete(item)">Xóa</button>
                    </td>
                </tr>
            </tbody>
        </table>
        <div class="d-flex justify-content-center mt-3" id="div-pagination">
        </div>
    </div>


    <div class="modal fade" id="modalUpdate" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document" style="max-width: 500px">
            <div class="modal-content" style="margin-bottom: 150px">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Cập nhật tài khoản</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="overflow-x: auto; overflow-y: auto; max-height: 700px;">
                    <div>
                        <div class="form-group">
                            <label for="ip1">Tên đầy đủ</label>
                            <input type="text" class="form-control" id="ip1" v-model="dataUpdate.fullName">
                        </div>
                        <div class="form-group">
                            <label for="ip2">Địa chỉ</label>
                            <input type="text" class="form-control" id="ip2" v-model="dataUpdate.address">
                        </div>
                        <div class="form-group">
                            <label for="ip3">Số điện thoại</label>
                            <input type="text" class="form-control" id="ip3" v-model="dataUpdate.phoneNumber">
                        </div>
                        <div class="form-group">
                            <label for="ip4">Mật khẩu</label>
                            <input type="password" class="form-control" id="ip4" v-model="dataUpdate.password">
                            <div class="text-danger" style="font-size: 14px;">{{dataUpdate.messagePassword}}</div>
                        </div>
                        <div class="form-group">
                            <label for="ip5">Số lần quay thưởng còn lại</label>
                            <input type="text" class="form-control" id="ip5" v-model="dataUpdate.numberPlayGame">
                            <div class="text-danger" style="font-size: 14px;">{{dataUpdate.messageNumberPlayGame}}</div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    <button v-if="dataUpdate.isLoad == false" type="button" class="btn btn-primary" v-on:click="UpdateAccount()">Xác nhận</button>
                    <button v-if="dataUpdate.isLoad" type="button" class="btn btn-primary">Đang xử lý...</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="modalDelete" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document" style="max-width: 500px">
            <div class="modal-content" style="margin-bottom: 150px">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Xóa tài khoản</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="overflow-x: auto; overflow-y: auto; max-height: 700px;">
                    <h3>Bạn có chắc chắn muốn xóa tài khoản này?</h3>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    <button v-if="dataDelete.isLoad == false" type="button" class="btn btn-danger" v-on:click="DeleteAccount()">Xác nhận</button>
                    <button v-if="dataDelete.isLoad" type="button" class="btn btn-primary">Đang xử lý...</button>
                </div>
            </div>
        </div>
    </div>


</div>





@section Scripts {
    <script>

        var appAccount = new Vue({
            el: "#appAccount",
            data: {
                resData: [],
                dataTable: [],
                isLoad: true,
                isActive: 0,
                accountName: "",

                totalPages: 1,
                pageSize: 10,

                dataUpdate: {
                    accountID: "",

                    fullName: "",
                    password: "",
                    address: "",
                    phoneNumber: "",
                    numberPlayGame: 0,

                    messagePassword: "",
                    messageNumberPlayGame: "",
                    isLoad: false
                },
                dataDelete: {
                    accountID: "",
                    isLoad: false
                }
            },
            methods: {
                init: async function () {

                    await this.GetAccounts();

                    this.$forceUpdate();
                },
                GetAccounts: async function () {
                    var self = this;
                    self.isLoad = true;
                    self.dataTable = [];

                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/admin/GetAccounts",
                        data: JSON.stringify({
                            accountName: self.accountName,
                            isActive: self.isActive
                        }),
                        success: function (res) {
                            self.isLoad = false;
                            if (res.status == 1) {
                                self.resData = res.data;
                                self.dataTable = self.resData.slice(0, self.pageSize);
                                self.totalPages = Math.ceil(self.resData.length / self.pageSize);

                                if (self.resData.length > 0) {
                                    document.getElementById("div-pagination").innerHTML = `<ul id="pagination" class="pagination-md"></ul>`;
                                    $('#pagination').twbsPagination({
                                        totalPages: self.totalPages,
                                        visiblePages: 6,
                                        first: "Trang đầu",
                                        last: "Trang cuối",
                                        next: 'Trang tiếp',
                                        prev: 'Trang trước',
                                        onPageClick: function (event, page) {
                                            var start = (page - 1) * self.pageSize;
                                            var end = page * self.pageSize;
                                            self.dataTable = self.resData.slice(start, end);
                                        }
                                    });
                                }
                            }
                            else {
                                ShowAlert(res.message, "danger");
                            }
                        },
                        error: function (xhr, status, error) {
                            self.isLoad = false;
                            ShowAlert(error.responseJSON.message, "danger");
                        }
                    });

                },
                PopupUpdate: function (account) {
                    console.log(account)
                    var self = this;
                    self.dataUpdate.accountID = account.accountID;
                    self.dataUpdate.fullName = account.fullName;
                    self.dataUpdate.password = account.password;
                    self.dataUpdate.address = account.address;
                    self.dataUpdate.phoneNumber = account.phoneNumber;
                    self.dataUpdate.numberPlayGame = account.numberPlayGame;
                    self.dataUpdate.messagePhoneNumber = "";
                    self.dataUpdate.messageNumberPlayGame = "";

                },
                UpdateAccount: async function () {
                    var self = this;

                    if (self.dataUpdate.password.length < 5) {
                        self.dataUpdate.messagePassword = "Mật khẩu tối thiểu trên 5 ký tự";
                        return;
                    }
                    else {
                        self.dataUpdate.messagePassword = "";
                    }
                    if (!self.dataUpdate.numberPlayGame || isNaN(self.dataUpdate.numberPlayGame)) {
                        self.dataUpdate.messageNumberPlayGame = "Vui lòng chỉ nhập số.";
                        return;
                    }
                    else {
                        self.dataUpdate.messageNumberPlayGame = "";
                    }

                    self.dataUpdate.isLoad = true;
                    $.ajax({
                        url: '/admin/updateaccount',
                        type: 'POST',
                        data: JSON.stringify({
                            accountID: self.dataUpdate.accountID,
                            fullName: self.dataUpdate.fullName,
                            password: self.dataUpdate.password,
                            address: self.dataUpdate.address,
                            phoneNumber: self.dataUpdate.phoneNumber,
                            numberPlayGame: self.dataUpdate.numberPlayGame,

                        }),
                        contentType: "application/json; charset=utf-8",
                        success: function (res) {
                            self.dataUpdate.isLoad = false;
                            if (res.status == 1) {
                                self.GetAccounts();
                                ShowAlert(res.message, "success");
                            }
                            else {
                                ShowAlert(res.message, "danger");
                            }
                            $('#modalUpdate').modal('hide');

                        },
                        error: function (error) {
                            self.dataUpdate.isLoad = false;
                            ShowAlert(error.responseJSON.message, "danger");
                        }
                    });

                },
                DeleteAccount: async function () {
                    var self = this;

                    self.dataDelete.isLoad = true;
                    $.ajax({
                        url: '/admin/deleteaccount',
                        type: 'POST',
                        data: JSON.stringify({
                            ID: self.dataDelete.accountID

                        }),
                        contentType: "application/json; charset=utf-8",
                        success: function (res) {
                            self.dataDelete.isLoad = false;
                            if (res.status == 1) {
                                self.GetAccounts();
                                ShowAlert(res.message, "success");
                            }
                            else {
                                ShowAlert(res.message, "danger");
                            }
                            $('#modalDelete').modal('hide');

                        },
                        error: function (error) {
                            self.dataDelete.isLoad = false;
                            ShowAlert(error, "danger");
                        }
                    });

                },
                PopupDelete: function (account) {
                    var self = this;
                    self.dataDelete.accountID = account.accountID;

                },





            },
            mounted() {
                this.init();
            },
        });
    </script>

}