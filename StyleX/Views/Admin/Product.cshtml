@{
    Layout = "_LayoutAdmin";
}
<div id="appProduct">
    <div class="row">
        <div class="row align-items-end col-8 col-md-9">
            @*             <div class="col-md-3 mb-3">
            <label>Thuộc danh mục:</label>
            <select class="form-control" v-model="categoryID">
            <option value="0">Tất cả</option>
            <option v-for="item in tableCategory" v-bind:value="item.categoryID">{{item.name}}</option>
            </select>
            </div>
            <div class="col-md-3 mb-3">
            <label>Trạng thái:</label>
            <select class="form-control" v-model="status">
            <option value="0">Tất cả</option>
            <option value="1">Đang bán</option>
            <option value="2">Ngừng bán</option>
            </select>
            </div>
            <div class="col-md-3 mb-3">
            <button class="btn btn-success" style="width: 120px;" v-on:click="GetProducts()">Tìm kiếm</button>
            </div> *@
        </div>
        <div class="col-4 col-md-3 justify-content-end d-flex align-items-end">
            <button style="height:39px; min-width:150px;" class="btn btn-primary mb-3" data-toggle="modal" data-target="#modalAdd">Thêm sản phẩm</button>
        </div>
    </div>

    <div style="overflow-x:auto;">
        <table class="table table-bordered" style="vertical-align: middle; text-align:center">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Hình ảnh</th>
                    <th scope="col">Tên sản phẩm</th>
                    <th scope="col">Mô tả</th>
                    <th scope="col">Giá</th>
                    <th scope="col">Giảm giá(%)</th>
                    <th scope="col">Số lượng còn lại</th>
                    <th scope="col">Thao tác</th>
                </tr>
            </thead>
            <tbody style="vertical-align:middle; font-size: 18px;">
                <tr v-if="isLoad">
                    <td style="font-size: 40px; text-align:center;" colspan="11"><i class="fa-solid fa-spinner fa-spin-pulse"></i></td>
                </tr>
                <tr v-if="isLoad == false" v-for="(item,index) in dataTable">
                    <td>{{index+1}}</td>
                    <td>
                        <a v-bind:href="item.posterUrl" alt="preview" target="_blank">
                            <img v-bind:src="item.posterUrl" style="height: 100px" />
                        </a>
                    </td>
                    <td>{{item.name}}</td>
                    <td>{{item.description}}</td>
                    <td>{{Number(item.price).toLocaleString("en-US")}}</td>
                    <td>{{item.sale}}</td>
                    <td>{{Number(item.numberAvailable).toLocaleString("en-US")}}</td>
                    <td>
                        <button style="width:110px" class="btn btn-warning mx-1 my-1" data-toggle="modal" data-target="#modalUpdate" v-on:click="PopupUpdateProduct(item)">Cập nhật</button>
                        <button style="width:110px" class="btn btn-danger mx-1 my-1" v-on:click="PopupDeleteProduct(item)">Xóa</button>

                    </td>
                </tr>
            </tbody>
        </table>

        <div class="d-flex justify-content-center mt-3" id="div-pagination">
        </div>
    </div>




    <div class="modal fade" id="modalAdd" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document" style="max-width: 800px">
            <div class="modal-content" style="margin-bottom: 150px">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Thêm sản phẩm mới</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="max-height: 550px;">
                    <div class="d-flex align-items-stretch">
                        <div class="col-md-7">
                            <model-viewer id="model-add" class="w-100 h-100" alt=""
                                          ar shadow-intensity="1" camera-controls disable-pan
                                          disable-tap autoplay auto-rotation shadow-softness="0.1" min-camera-orbit="auto auto 100%"
                                          max-camera-orbit="auto auto 100%">
                            </model-viewer>
                        </div>
                        <div class="col-md-5">
                            <div class="px-2" style="overflow-y:auto; max-height:480px;">
                                <div class="form-group">
                                    <label>Chọn file mô hình (glb, gltf)</label>
                                    <input type="file" class="form-control" v-on:change="ChangeModel" id="input-model">
                                    <div class="text-danger" style="font-size: 14px;">{{dataAdd.messageModel}}</div>
                                </div>
                                <div class="form-group">
                                    <label>Chọn ảnh</label>
                                    <input type="file" class="form-control" v-on:change="ChangeImage" id="input-image">
                                    <div class="text-danger" style="font-size: 14px;">{{dataAdd.messageFile}}</div>
                                    <img v-if="dataAdd.image" style="width: 80px;" v-bind:src="dataAdd.image" />
                                </div>
                                <div class="form-group">
                                    <label>Tên sản phẩm</label>
                                    <input type="text" class="form-control" v-model="dataAdd.name">
                                    <div class="text-danger" style="font-size: 14px;">{{dataAdd.messageName}}</div>
                                </div>
                                <div class="form-group">
                                    <label>Mô tả</label>
                                    <input type="text" class="form-control" v-model="dataAdd.description">
                                </div>
                                <div class="form-group">
                                    <label>Giá bán (&#8363;)</label>
                                    <input type="number" class="form-control" v-model="dataAdd.price">
                                    <div class="text-danger" style="font-size: 14px;">{{dataAdd.messagePrice}}</div>
                                </div>
                                <div class="form-group">
                                    <label>Khuyến mại(%)</label>
                                    <input type="number" class="form-control" v-model="dataAdd.sale">
                                </div>
                                <div class="form-group">
                                    <label>Số lượng</label>
                                    <input type="number" class="form-control" v-model="dataAdd.numberAvailable">
                                </div>
                            </div>

                        </div>

                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    <button v-if="dataAdd.isLoad == false" type="button" class="btn btn-primary" v-on:click="AddProduct()">Xác nhận</button>
                    <button v-if="dataAdd.isLoad" type="button" class="btn btn-primary">Đang xử lý...</button>

                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="modalUpdate" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document" style="max-width: 800px">
            <div class="modal-content" style="margin-bottom: 150px">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Cập nhật sản phẩm </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="max-height: 550px;">
                    <div class="d-flex align-items-stretch">
                        <div class="col-md-7">
                            <model-viewer id="model-update" class="w-100 h-100" alt=""
                                          ar shadow-intensity="1" camera-controls disable-pan
                                          disable-tap autoplay auto-rotation shadow-softness="0.1" min-camera-orbit="auto auto 100%"
                                          max-camera-orbit="auto auto 100%">
                            </model-viewer>
                        </div>
                        <div class="col-md-5">
                            <div class="px-2" style="overflow-y:auto; max-height:480px;">
                                <div class="form-group">
                                    <label>Chọn ảnh</label>
                                    <input type="file" class="form-control" v-on:change="ChangeImageU" id="input-image-u">
                                    <div class="text-danger" style="font-size: 14px;">{{dataUpdate.messageFile}}</div>
                                    <img v-if="dataUpdate.image" style="width: 80px;" v-bind:src="dataUpdate.image" />
                                </div>
                                <div class="form-group">
                                    <label>Tên sản phẩm</label>
                                    <input type="text" class="form-control" v-model="dataUpdate.name">
                                    <div class="text-danger" style="font-size: 14px;">{{dataUpdate.messageName}}</div>
                                </div>
                                <div class="form-group">
                                    <label>Mô tả</label>
                                    <input type="text" class="form-control" v-model="dataUpdate.description">
                                </div>
                                <div class="form-group">
                                    <label>Giá bán (&#8363;)</label>
                                    <input type="text" class="form-control" v-model="dataUpdate.price">
                                    <div class="text-danger" style="font-size: 14px;">{{dataUpdate.messagePrice}}</div>
                                </div>
                                <div class="form-group">
                                    <label>Khuyến mại(%)</label>
                                    <input type="text" class="form-control" v-model="dataUpdate.sale">
                                </div>
                                <div class="form-group">
                                    <label>Số lượng còn lại</label>
                                    <input type="text" class="form-control" v-model="dataUpdate.numberAvailable">
                                </div>
                            </div>

                        </div>

                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    <button v-if="dataAdd.isLoad == false" type="button" class="btn btn-primary" v-on:click="UpdateProduct()">Xác nhận</button>
                    <button v-if="dataAdd.isLoad" type="button" class="btn btn-primary">Đang xử lý...</button>

                </div>
            </div>
        </div>
    </div>

</div>


@section Scripts {

    <script>
        var appProduct = new Vue({
            el: "#appProduct",
            data: {
                resData: [],
                dataTable: [],
                isLoad: true,
                status: 0,
                totalPages: 1,
                pageSize: 10,

                dataAdd: {
                    model: {},
                    fileModel: "",
                    messageModel: "",


                    name: "",
                    messageName: "",

                    file: "",
                    image: "",
                    messageFile: "",

                    description: "",

                    price: 10000,
                    messagePrice: "",

                    sale: 0,
                    messageSale: "",
                    numberAvailable: 100,

                    isLoad: false
                },
                dataUpdate: {
                    productID: "",
                    name: "",
                    messageName: "",

                    file: "",
                    image: "",
                    messageFile: "",

                    description: "",

                    price: "",
                    messagePrice: "",

                    sale: "",
                    messageSale: "",
                    numberAvailable: 100,

                    isLoad: false
                },



            },
            methods: {
                init: async function () {
                    var self = this;

                    await this.GetProducts();

                    this.$forceUpdate();
                },
                GetProducts: async function () {
                    var self = this;
                    self.isLoad = true;
                    self.dataTable = [];

                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/admin/GetProducts",
                        data: {},
                        success: function (res) {
                            self.isLoad = false;
                            if (res.status == 1) {
                                self.resData = res.data;
                                self.dataTable = self.resData.slice(0, self.pageSize);
                                self.totalPages = Math.ceil(self.resData.length / self.pageSize);
                                if (self.resData.length > 0) {
                                    document.getElementById("div-pagination").innerHTML = `<ul id="pagination" class="pagination-md"></ul>`;

                                    $('#pagination').twbsPagination({
                                        totalPages: self.totalPages,
                                        visiblePages: 6,
                                        first: "Trang đầu",
                                        last: "Trang cuối",
                                        next: 'Trang tiếp',
                                        prev: 'Trang trước',
                                        onPageClick: function (event, page) {
                                            var start = (page - 1) * self.pageSize;
                                            var end = page * self.pageSize;
                                            self.dataTable = self.resData.slice(start, end);
                                        }
                                    });
                                }


                            }
                            else {
                                ShowAlert(res.message, "danger");
                            }
                        },
                        error: function (xhr, status, error) {
                            self.isLoad = false;
                            ShowAlert("Có lỗi xảy ra", "danger");
                        }
                    });

                },
                ChangeImage: function (e) {
                    var self = this;
                    var file = e.target.files[0];
                    if (isFileImage(file)) {
                        self.dataAdd.image = URL.createObjectURL(file);
                        self.dataAdd.file = file;
                        self.dataAdd.messageFile = "";
                    }
                    else {
                        self.dataAdd.messageFile = "Định dạng file không phù hợp.";
                        self.dataAdd.image = "";
                        self.dataAdd.file = "";
                        document.getElementById('input-image').value = "";
                    }

                },

                ChangeModel: function (e) {
                    var self = this;
                    var file = e.target.files[0];
                    const fileExtension = file.name.split('.').pop().toLowerCase();

                    self.dataAdd.productParts = [];
                    if (fileExtension === 'glb' || fileExtension === 'gltf') {
                        document.getElementById('model-add').style.display = "block";
                        document.getElementById('model-add').src = URL.createObjectURL(file);
                        self.dataAdd.fileModel = file;
                        self.dataAdd.messageModel = "";
                        document.getElementById("model-add").addEventListener('load', (e) => {
                            self.dataAdd.model = e.target.model;

                        });
                    }
                    else {
                        document.getElementById('model-add').style.display = "none";
                        document.getElementById('model-add').src = "";
                        self.dataAdd.messageModel = "Định dạng file không phù hợp.";
                        self.dataAdd.fileModel = "";
                        document.getElementById('input-model').value = "";
                        self.dataAdd.model = {};
                    }

                },
                AddProduct: async function () {
                    var self = this;
                    console.log(self.dataAdd);

                    if (!self.dataAdd.fileModel) {
                        self.dataAdd.messageModel = "Bạn chưa chọn file model.";
                        return;
                    }
                    else {
                        self.dataAdd.messageModel = "";
                    }
                    if (!self.dataAdd.file) {
                        self.dataAdd.messageFile = "Bạn chưa chọn ảnh cho sản phẩm.";
                        return;
                    }
                    else {
                        self.dataAdd.messageFile = "";
                    }
                    if (!self.dataAdd.name) {
                        self.dataAdd.messageName = "Bạn chưa đặt tên cho sản phẩm này.";
                        return;
                    }
                    else {
                        self.dataAdd.messageName = "";
                    }
                    if (!self.dataAdd.price || isNaN(self.dataAdd.price)) {
                        self.dataAdd.messagePrice = "Bạn chưa nhập giá tiền cho sản phẩm.";
                        return;
                    }
                    else {
                        self.dataAdd.messagePrice = "";
                    }
                    if (!self.dataAdd.sale || isNaN(self.dataAdd.sale)) {
                        self.dataAdd.sale = 0;
                    }

                    var formData = new FormData();
                    formData.append('name', self.dataAdd.name);
                    formData.append('file', self.dataAdd.file);

                    formData.append('status', self.dataAdd.status);
                    formData.append('categoryID', self.dataAdd.categoryID);
                    formData.append('fileModel', self.dataAdd.fileModel);
                    formData.append('description', self.dataAdd.description);
                    formData.append('price', self.dataAdd.price);
                    formData.append('sale', self.dataAdd.sale);
                    formData.append('numberAvailable', self.dataAdd.numberAvailable);



                    self.dataAdd.isLoad = true;
                    $.ajax({
                        url: '/admin/addproduct',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (res) {
                            self.dataAdd.isLoad = false;
                            if (res.status == 1) {
                                self.GetProducts();
                                ShowAlert(res.message, "success");
                                self.dataAdd.name = "";
                                self.dataAdd.status = true;
                                self.dataAdd.file = null;

                                self.dataAdd.image = "";

                                self.dataAdd.fileModel = null;
                                self.dataAdd.description = "";
                                self.dataAdd.price = 0;
                                self.dataAdd.sale = 0;
                                self.dataAdd.numberAvailable = 100;
                                self.dataAdd.productParts = [];
                                document.getElementById('input-model').value = "";
                                document.getElementById('input-image').value = "";

                                document.getElementById('model-add').src = "";
                                document.getElementById('model-add').style.display = "none";


                                $('#modalAdd').modal('hide');

                            }
                            else {
                                ShowAlert(res.message, "danger");
                            }

                        },
                        error: function (error) {
                            console.log(error)
                            self.dataAdd.isLoad = false;
                            ShowAlert(error.responseJSON.mesage, "danger");
                        }
                    });

                },

                formatDateDisplay: function (inputDateString) {
                    if (!inputDateString) {
                        return "";
                    }

                    // Tạo một đối tượng Date từ chuỗi đầu vào
                    var inputDate = new Date(inputDateString);

                    // Lấy các thông tin thời gian từ đối tượng Date
                    var hours = inputDate.getHours().toString().padStart(2, '0');
                    var minutes = inputDate.getMinutes().toString().padStart(2, '0');
                    var seconds = inputDate.getSeconds().toString().padStart(2, '0');
                    var day = inputDate.getDate().toString().padStart(2, '0');
                    var month = (inputDate.getMonth() + 1).toString().padStart(2, '0'); //Tháng trong JavaScript bắt đầu từ 0, nên cần cộng thêm 1
                    var year = inputDate.getFullYear();


                    if (isNaN(day) || isNaN(month) || isNaN(year)) {
                        return '';
                    }


                    var formattedDate = `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;
                    return formattedDate;
                },
                formatDateDisplay2: function (inputDateString) {
                    var inputDate = new Date(inputDateString);

                    if (!inputDateString) {
                        var inputDate = new Date();
                    }

                    // Tạo một đối tượng Date từ chuỗi đầu vào

                    // Lấy các thông tin thời gian từ đối tượng Date
                    var hours = inputDate.getHours().toString().padStart(2, '0');
                    var minutes = inputDate.getMinutes().toString().padStart(2, '0');
                    var seconds = inputDate.getSeconds().toString().padStart(2, '0');
                    var day = inputDate.getDate().toString().padStart(2, '0');
                    var month = (inputDate.getMonth() + 1).toString().padStart(2, '0'); //Tháng trong JavaScript bắt đầu từ 0, nên cần cộng thêm 1
                    var year = inputDate.getFullYear();


                    if (isNaN(day) || isNaN(month) || isNaN(year)) {
                        return '';
                    }


                    var formattedDate = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
                    return formattedDate;
                },

                PopupUpdateProduct: function (product) {
                    var self = this;
                    console.log(product)
                    document.getElementById('model-update').src = product.modelUrl;
                    self.dataUpdate.name = product.name;
                    self.dataUpdate.image = product.posterUrl;

                    self.dataUpdate.description = product.description;
                    self.dataUpdate.price = product.price;
                    self.dataUpdate.sale = product.sale;
                    self.dataUpdate.productID = product.productID;
                    self.dataUpdate.numberAvailable = product.numberAvailable;

                },
                ChangeImageU: function (e) {
                    var self = this;
                    var file = e.target.files[0];
                    if (isFileImage(file)) {
                        self.dataUpdate.image = URL.createObjectURL(file);
                        self.dataUpdate.file = file;
                        self.dataUpdate.messageFile = "";
                    }
                    else {
                        self.dataUpdate.messageFile = "Định dạng file không phù hợp.";
                        self.dataUpdate.image = "";
                        self.dataUpdate.file = "";
                        document.getElementById('input-image-u').value = "";
                    }

                },

                UpdateProduct: async function () {
                    var self = this;

                    if (!self.dataUpdate.name) {
                        self.dataUpdate.messageName = "Bạn chưa đặt tên cho sản phẩm này.";
                        return;
                    }
                    else {
                        self.dataUpdate.messageName = "";
                    }
                    if (!self.dataUpdate.price || isNaN(self.dataAdd.price)) {
                        self.dataUpdate.messagePrice = "Bạn chưa nhập giá tiền cho sản phẩm.";
                        return;
                    }
                    else {
                        self.dataUpdate.messagePrice = "";
                    }
                    if (!self.dataUpdate.sale || isNaN(self.dataUpdate.sale)) {
                        self.dataUpdate.sale = 0;
                    }

                    var formData = new FormData();
                    formData.append('name', self.dataUpdate.name);
                    formData.append('file', self.dataUpdate.file);

                    formData.append('status', self.dataUpdate.status);
                    formData.append('description', self.dataUpdate.description);
                    formData.append('price', self.dataUpdate.price);
                    formData.append('sale', self.dataUpdate.sale);
                    formData.append('productID', self.dataUpdate.productID);
                    formData.append('numberAvailable', self.dataUpdate.numberAvailable);



                    self.dataUpdate.isLoad = true;
                    $.ajax({
                        url: '/admin/updateproduct',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (res) {
                            self.dataUpdate.isLoad = false;
                            if (res.status == 1) {
                                self.GetProducts();
                                ShowAlert(res.message, "success");
                                self.dataUpdate.name = "";
                                self.dataUpdate.status = true;
                                self.dataUpdate.file = null;
                                self.dataUpdate.image = "";
                                self.dataUpdate.description = "";
                                self.dataUpdate.price = "";
                                self.dataUpdate.sale = "";
                                self.dataUpdate.numberAvailable = "";

                                self.dataUpdate.productID = "";
                                document.getElementById('input-image-u').value = "";


                                $('#modalUpdate').modal('hide');
                            }
                            else {
                                ShowAlert(res.message, "danger");
                            }

                        },
                        error: function (error) {
                            self.dataUpdate.isLoad = false;
                            ShowAlert("Có lỗi xảy ra", "danger");
                        }
                    });

                },
                PopupDeleteProduct: function (item) {
                    var self = this;
                    if (confirm('Bạn có chắc muốn xóa sản phẩm này?')) {
                        $.ajax({
                            url: '/admin/deleteproduct',
                            type: 'POST',
                            data: JSON.stringify({
                                ID: item.productID
                            }),
                            contentType: 'application/json',
                            success: function (res) {
                                if (res.status == 1) {
                                    self.GetProducts();
                                    ShowAlert(res.message, "success");
                                }
                                else {
                                    ShowAlert(res.message, "danger");
                                }

                            },
                            error: function (error) {
                                ShowAlert("Có lỗi xảy ra", "danger");
                            }
                        });
                        return;
                    } else {
                        return;
                    }

                }

            },
            mounted() {
                this.init();
            },
        });

    </script>

}