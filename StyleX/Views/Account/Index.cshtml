@{
    Layout = "_Layout";

    StyleX.Models.Account user = ViewBag.user as StyleX.Models.Account ?? new StyleX.Models.Account();
    List<StyleX.Models.Order> orders = ViewBag.orders as List<StyleX.Models.Order> ?? new List<StyleX.Models.Order>();
    int index = 1;
}



<section class="ftco-section" style="background-image: url('/images/bg.jpg'); background-size:cover" id="appAccount">
    <div class="container-x mt-5 mb-5">
        <div class="row no-gutters shadow rounded">
            <div class="col-md-5 col-lg-5"><img class="h-100 w-100" src="/images/avatar/@Html.Raw(user.Avatar)"></div>
            <div class="col-md-7 col-lg-7">
                <div class="d-flex flex-column">
                    <div class="d-flex flex-row justify-content-between align-items-center p-4 bg-dark text-white">
                        <h2 class="display-5 text-white text-center w-100" style="font-family:'Segoe UI'">{{fullname}}</h2>
                    </div>
                    <div class="p-3 text-white" style="background-color: #343a40">
                        <div class="row d-flex align-items-center">
                            <div class="col-5" style="font-size: 20px; font-family:'Segoe UI'">Tên đầy đủ :</div>
                            <div class="col-7">
                                <input type="text" class="form-control form-control-sm" v-model="fullname" v-on:change="Update()">
                            </div>
                        </div>
                        <div class="row d-flex align-items-center mt-2">
                            <div class="col-5" style="font-size: 20px;  font-family:'Segoe UI'">Địa chỉ :</div>
                            <div class="col-7">
                                <input type="text" class="form-control form-control-sm" v-model="address" v-on:change="Update()">
                            </div>
                        </div>
                        <div class="row d-flex align-items-center mt-2">
                            <div class="col-5" style="font-size: 20px;  font-family:'Segoe UI'">Số điện thoại :</div>
                            <div class="col-7">
                                <input type="text" class="form-control form-control-sm" v-model="phoneNumber" v-on:change="Update()">
                            </div>
                        </div>
                        <div class="row d-flex align-items-center mt-2">
                            <div class="col-5" style="font-size: 20px;  font-family:'Segoe UI'">Email :</div>
                            <div class="col-7">
                                <input type="text" class="form-control form-control-sm" readonly value="@Html.Raw(user.Email)">
                            </div>
                        </div>
                        <div class="row d-flex align-items-center mt-2">
                            <div class="col-5" style="font-size: 20px; font-family:'Segoe UI'">Mật khẩu :</div>
                            <div class="col-7">
                                <input type="password" class="form-control form-control-sm" v-model="password" v-on:change="Update()">
                                <div class="text-danger" style="font-size:14px;">{{messagePassword}}</div>
                            </div>
                        </div>
                    </div>
                    <div class="d-flex flex-row text-white">
                        <div class="p-2 bg-info text-center skill-block" style="width: 30%; font-family:'Segoe UI'">
                            <h3>@ViewBag.promotion1</h3>
                            <h6>Phiếu giảm giá 10% tổng hóa đơn</h6>
                        </div>
                        <div class="p-2 bg-success text-center skill-block" style="width: 30%; font-family:'Segoe UI'">
                            <h3>@ViewBag.promotion2</h3>
                            <h6>Phiếu giảm giá 20% tổng hóa đơn</h6>
                        </div>
                        <div class="p-2 bg-warning text-center skill-block" style="width: 30%; font-family:'Segoe UI'">
                            <h3>@ViewBag.promotion3</h3>
                            <h6>Phiếu giảm giá 30% tổng hóa đơn</h6>
                        </div>
                        <div class="p-2 bg-danger text-center skill-block" style="width: 30%; font-family:'Segoe UI'">
                            <h3>@ViewBag.promotion4</h3>
                            <h6>Phiếu giảm giá 40% tổng hóa đơn</h6>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div style="overflow-x: auto" class="shadow rounded">
            <table class="table table-light mt-3 table-striped" style="vertical-align: middle">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Mã đơn hàng</th>
                        <th scope="col">Người nhận</th>
                        <th scope="col">Địa chỉ</th>
                        <th scope="col">Số điện thoại</th>
                        <th scope="col">Ghi chú</th>
                        <th scope="col">Phí vận chuyển</th>
                        <th scope="col">Tổng tiền</th>
                        <th scope="col">Khuyến mại</th>
                        <th scope="col">Số tiền phải trả</th>
                        <th scope="col">Trạng thái</th>
                        <th scope="col">Ngày tạo</th>
                        <th scope="col">Cập nhật lúc</th>
                        <th scope="col"></th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (StyleX.Models.Order order in orders)
                    {
                        <tr>
                            <td>@order.OrderID</td>
                            <td>@order.Name</td>
                            <td>@order.Address</td>
                            <td>@order.PhoneNumber</td>
                            <td>@order.Message</td>
                            <td>@order.TransportFee.ToString("#,##0") &#8363;</td>
                            <td>@order.BasePrice.ToString("#,##0") &#8363;</td>
                            <td>@order.PercentSale.ToString("#,##0") %</td>
                            <td>@order.NetPrice.ToString("#,##0") &#8363;</td>
                            @{
                                if (order.Status==0)
                                {
                                    <td>Đang xử lý</td>
                                }
                                else if (order.Status == 1)
                                {
                                    <td>Đang giao hàng</td>
                                }
                                else if (order.Status == 2)
                                {
                                    <td>Giao hàng thành công</td>
                                }
                                else if (order.Status == 3)
                                {
                                    <td>Đã hủy</td>
                                }
                            }
                            <td>@order.CreateAt.ToString("HH:mm:ss dd/MM/yyyy")</td>
                            <td>@order.UpdateAt.ToString("HH:mm:ss dd/MM/yyyy")</td>
                            <td><button class="btn btn-success" data-toggle="modal" data-target="#exampleModalCenter" v-on:click="ViewDetail(@order.OrderID)">Chi tiết</button></td>
                        </tr>
                        index++;
                    }
                </tbody>
            </table>

        </div>

    </div>

    <!-- Modal -->
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document" style="max-width: 70vw">
            <div class="modal-content" style="margin-bottom: 150px">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Chi tiết hóa đơn</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="overflow-x: auto; overflow-y: auto; max-height: 600px;">
                    <table class="table table-striped">
                        <thead class="thead-dark">
                            <tr style="vertical-align: middle">
                                <th scope="col">#</th>
                                <th scope="col">Sản phẩm</th>
                                <th scope="col">Tên sản phẩm</th>
                                <th scope="col">Mô tả</th>
                                <th scope="col">Số lượng</th>
                                <th scope="col">Kích cỡ</th>
                                <th scope="col">Giá</th>
                                <th scope="col">Khuyến mại</th>
                                <th scope="col">Thành tiền</th>
                                <th scope="col">Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-if="loadOrderItems">
                                <td colspan="9"><i class="fa-solid fa-spinner fa-spin-pulse"></i></td>
                            </tr>
                            <tr v-if="!loadOrderItems" v-for="(item,index) in orderItems">
                                <td>{{index+1}}</td>
                                <td><img v-bind:src="item.posterUrl" style="width: 100px;" /></td>
                                <td>{{item.product.name}}</td>
                                <td>{{item.product.description}}</td>
                                <td>{{Number(item.amount).toLocaleString('en-US')}}</td>
                                <td>{{item.size}}</td>
                                <td>{{Number(item.price).toLocaleString('en-US')}}</td>
                                <td>{{Number(item.sale).toLocaleString('en-US')}}%</td>
                                <td>{{Number((item.price*item.amount) - (item.price/100*item.sale) * item.amount).toLocaleString('en-US')}}</td>
                                <td><a class="btn btn-success" v-bind:href="'/design/viewdesign?id='+item.cartItemID" target="_blank">Xem 3D</a></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <!-- <div class="modal-footer">
                     <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                     <button type="button" class="btn btn-primary">Save changes</button>
                 </div> -->
            </div>
        </div>
    </div>
</section>




@section Scripts{

    <script>
        var appAccount = new Vue({
            el: "#appAccount",
            data: {
                fullname: '@Html.Raw(user.FullName)',
                address: '@Html.Raw(user.Address)',
                phoneNumber: '@Html.Raw(user.PhoneNumber)',
                password: '@Html.Raw(user.Password)',
                messagePassword: '',
                orderItems: [],
                loadOrderItems: true
            },
            methods: {
                init: async function () {
                    this.$forceUpdate();

                },
                Update: async function () {
                    var self = this;

                    if (self.password.length < 5) {
                        self.messagePassword = "Mật khẩu tối thiểu là 5 ký tự.";
                        return;
                    }
                    else {
                        self.messagePassword = "";
                    }

                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/Account/Update",
                        data: JSON.stringify({
                            fullname: self.fullname,
                            address: self.address,
                            phoneNumber: self.phoneNumber,
                            password: self.password

                        }),
                        success: function (data) {
                            if (data.status == 1) {
                                ShowAlert(data.message, "success");
                            }
                            else {
                                ShowAlert(data.message, "danger");
                            }
                        },
                        error: function (xhr, status, error) {
                            ShowAlert(error, "danger");
                        }
                    });

                },
                ViewDetail: async function (orderId) {
                    var self = this;
                    self.orderItems = [];
                    self.loadOrderItems = true;

                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/Order/GetOrderItems",
                        data: JSON.stringify({
                            ID: orderId
                        }),
                        success: function (res) {
                            self.loadOrderItems = false;
                            if (res.status == 1) {
                                self.orderItems = res.data;
                                console.log(self.orderItems)
                            }
                            else {
                                ShowAlert(res.message, "danger");
                            }
                        },
                        error: function (xhr, status, error) {
                            self.loadOrderItems = false;
                            ShowAlert(error, "danger");
                        }
                    });

                }


            },
            mounted() {
                this.init();
            },
        });

    </script>
}




